<meta charset = "UTF-8">
<link rel = "stylesheet" href="style.css">
<title>Serie A </title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.socket.io/4.5.3/socket.io.js"></script>
<script>var socket = io();</script>
<script>
    socket.on("update", (data) => {
        let json = data.round
        let ids = data.ids
        let live = data.live
        let main = json.matches
        let startRound = main.firstUnplayedMatch.firstRoundWithUnplayedMatch
        let round = main.data.matchesCombinedByRound[startRound]
        if ($('.match').length==0) {
            $('#round_nr').append(`Giornata `+startRound)
            matchDays = Object.keys(round)
            matchDays.forEach(day => {
                for (let i = 0; i < round[day].length; i++) {
                    if (i== 0) {
                        first = round[day][i].id
                    }
                    if (i==round[day].length-1) {
                        last = round[day][i].id
                    }
                    let h_team = round[day][i].home
                    let a_team = round[day][i].away
                    let status
                    let status2
                    if (live[ids[h_team.name].id+'-'+ids[a_team.name].id+"-17"]) {
                            id_match = ids[h_team.name].id+'-'+ids[a_team.name].id+"-17"
                            status = live[id_match].statusText+' '+live[id_match].gameTimeDisplay
                            status2 = live[id_match].homeCompetitor.score+'-'+live[id_match].awayCompetitor.score
                            
                    } else {
                        if (round[day][i].status.reason) {
                            status2 = round[day][i].status.scoreStr
                            status = round[day][i].status.reason.long
                        } else {
                            status2 = round[day][i].status.startTimeStr
                            status = round[day][i].status.startDateStr
                        }
                        
                    }   
                    $('#matches').append(`<%- include('./match'); %>`);
                }
            });
            
        }
    });

    socket.on("check", async (live) => {
        $( document ).ready(function() {
            var keys = Object.keys(live)
            keys.forEach(match => {
                if ($('#'+match)) {
                    console.log(live[match])
                    $('#'+match).find('.scoreboard').text(live[match].statusText+' '+live[match].gameTimeDisplay)
                    $('#'+match).find('.status').text(live[match].homeCompetitor.score+'-'+live[match].awayCompetitor.score)
                }
            });
        })  
    });

    socket.on("stats", (json) => {
        let game = json.game
        let h_team = game.homeCompetitor
        let a_team = game.awayCompetitor
        $('body').append(`<%- include('./modal'); %>`);
        if (game.gameTime>-1) {
            if (h_team.statistics.length ==  a_team.statistics.length) {
                for (let col = 0; col < h_team.statistics.length; col++) {
                    if (String(h_team.statistics[col].value).endsWith('%')) {
                        h_team.statistics[col].value = String(h_team.statistics[col].value).replace('%','')
                    }
                    if (String(a_team.statistics[col].value).endsWith('%')) {
                        a_team.statistics[col].value = String(a_team.statistics[col].value).replace('%','')
                    }
                    if (col<Math.round(h_team.statistics.length/2)) {
                        $('#stats > .stat1').append(`<%- include('./stat'); %>`);  
                    }
                    else {
                        $('#stats > .stat2').append(`<%- include('./stat'); %>`);  
                    }
                }
            }
        }
        $('#viewNote').modal('show');
        const myModalEl = document.getElementById('viewNote')
        myModalEl.addEventListener('hidden.bs.modal', event => {
            myModalEl.remove()
        })
    })
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script src="https://kit.fontawesome.com/6137bb9b43.js" crossorigin="anonymous"></script>